using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace MistralAssignment.Database
{
    public class ApplicationDbContextSeed
    {
        public static async Task SeedDbAsync(ApplicationDbContext context)
        {
            await SeedShowTypes(context);
            await SeedShows(context);
        }

        public static async Task SeedShowTypes(ApplicationDbContext context)
        {
            if (!context.ShowTypes.Any())
            {
                var showTypes = new List<ShowType>
                {
                    new ShowType
                    {
                        Name = "Movie"
                    },
                    new ShowType
                    {
                        Name = "TvShow"
                    }
                };

                await context.ShowTypes.AddRangeAsync(showTypes);
                await context.SaveChangesAsync();
            }
        }

        public static async Task SeedShows(ApplicationDbContext context)
        {
            if(!context.Shows.Any())
            {
                #region ShowsSeed
                string img1 = "";
                string img2 = "";
                string img3 = "";
                byte[] image1Array = Convert.FromBase64String(img1);
                byte[] image2Array = Convert.FromBase64String(img2);
                byte[] image3Array = Convert.FromBase64String(img3);

                var shows = new List<Show>
                {
                    new Show
                    {
                        Title = "Dr. Strange",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.66,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(1998, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tom Hanks"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Wookie Chewbacca"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Dr. Strange 2",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.1,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(1999, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Foo Bar"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Elon Musk"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Dr. Strange 3",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.7,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2000, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Lo and Behold"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Johnny Depp"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Arabian Prince",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2001, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Winnie Pooh"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Scarlett Johanson"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 1",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.3,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2002, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Lord Vader"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Stormtrooper"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 2",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.3,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2003, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Admiral Ackbar"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Clone trooper"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 3",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.7,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2004, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Palpatine"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Darth Maul"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 4",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.2,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2005, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Obi Wan-Kenobi"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Darth Plagueis"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 5",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.8,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2006, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Anakin Earthwalker"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Jar Jar Binks"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Star Wars 6",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2007, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Anakin Earthwalker"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Jar Jar Binks"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Lord of the rings 1",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)5.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2008, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Sauron"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Frodo"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Lord of the rings 2",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2009, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Pippin"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Gandalf"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Lord of the rings 3",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2010, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Merry the Hobbit"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Elrond the Elf"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Lord of the rings 3",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2011, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Balrog the Balrog"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Dwarf Gimli"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Hobbit: An Unexpected Journey",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2012, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Beorn Bear"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Dwarf Balin"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Hobbit: Desolation of Smaug",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)5.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2013, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Gandalf the Gray"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Saruman the White"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Hobbit: The Five Armies",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2014, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Thorin Oakenshield"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Radagast the Brown"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Philosopher's Stone",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)1.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2015, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Harry Trotter"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Uncle Vernon"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Chamber of Secrets",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2016, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Ron Weasley"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Hermione Granger"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Prisoner of Azkaban",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2017, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Sirius Black"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Albus Dumbledore"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Goblet of Fire",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2018, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Mad-Eye Moody"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Professor McGonagall"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Order of the Phoenix",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2018, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Lord Voldemort"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Professor Snape"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Half-Blood Prince",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2019, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Horace Slughorn"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Hagrid the Half-Giant"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Harry Potter and the Deathly Hallows",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)5.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2019, 4, 30),
                        ShowType = context.ShowTypes.Where(show => show.Name == "Movie").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Albus Severus Potter"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Neville Longbottom"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Strange Show 1",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)1.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(1998, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tom Danks"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Wookie Khewbacca"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Strange Show 2",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)1.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(1999, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Fooh Bar"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Elan Mosk"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Breaking Bad",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2000, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Low and Behold"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Johnny Ocean"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "The Witcher",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2001, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tiger Snake"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tiger Woods"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Counter Strike",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2002, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Lord Bader"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Panzerkampfwagen"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Champions League",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2003, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Cristiano Ronaldo"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Leo Messi"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Champions League 2",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2004, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Alexandre Lacazette"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Kylian Mbappe"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Champions League 3",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2005, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Edin Dzeko"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Roberto Baggio"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Vikings",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)5.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2006, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Ragnar Lothbrokk"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Bjorn Ironside"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "CSI Miami",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2007, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "The Glasses Guy"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Various Criminals"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "CSI LA",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2008, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Int32"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Jacked Array"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Ancient Warriors",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2009, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Alexander the Great"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Julius Caesar"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Rome",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2010, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Merry the Hobbit"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Elrond the Elf"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Carthage",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2011, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Carthago Delenda est"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Flavius Germanicus"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "The Three Kingdoms",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2012, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Cao Cao"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Dong Zhuo"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Fargo",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2013, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Some Guy"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tumbleweed Bush"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "True Detective",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)5.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2014, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Sneak Peek"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Mr. Beast"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Yu-Gi-Oh",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2015, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Yami Yugi"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Seto Kaiba"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Deathnote",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2016, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Light Yagami"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Kira"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Pokemon",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)3.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2017, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Ash Ketchum"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Mr. Brock"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "The Daredevil",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2018, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Matt Murdock"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Karen Page"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "The Punisher",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.0,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2018, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image1Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Frank Castle"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Agent Sage"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Game of Thrones",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)4.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2019, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image2Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "John Snow"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Tywin Lannister"
                                }
                            }
                        }
                    },
                    new Show
                    {
                        Title = "Gotham",
                        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        AverageRating = (decimal)2.5,
                        NumberOfRatings = 10,
                        ReleaseDate = new DateTime(2019, 4, 30),
                        ShowType = context.ShowTypes.Where(showType => showType.Name == "TvShow").Single(),
                        ShowImage = image3Array,
                        Cast = new List<ShowActor>
                        {
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Bruce Wayne"
                                }
                            },
                            new ShowActor
                            {
                                Actor = new Actor
                                {
                                    Name = "Harvey Dent"
                                }
                            }
                        }
                    },
                };
                #endregion
                await context.Shows.AddRangeAsync(shows);
                await context.SaveChangesAsync();
            }
        }
    }
}
